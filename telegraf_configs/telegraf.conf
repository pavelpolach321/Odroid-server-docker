# Configuration for telegraf agent
[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  debug = false
  quiet = false
  logfile = ""
  hostname = "$HOSTNAME"

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

# Configuration for influxdb server to send metrics to
[[outputs.influxdb_v2]]
  urls = ["http://$INFLUXDB_DOCKER_CONTAINER_NAME:$INFLUXDB_PORT"] # required
  timeout = "5s"
  bucket = "$DOCKER_INFLUXDB_INIT_BUCKET"
  organization = "$DOCKER_INFLUXDB_INIT_ORG"
  token = "$DOCKER_INFLUXDB_INIT_ADMIN_TOKEN"
  insecure_skip_verify = true

###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

######################
#    Wifi broker     #
######################
[[inputs.mqtt_consumer]]
    servers = ["$MQQT_1_SERVER"]
    qos = 0
    connection_timeout = "30s"
    client_id = "$MQQT_1_CLIENT_ID"
    username = "$MQQT_1_USERNAME"
    password = "$MQQT_1_PASSWORD"
    # topic as an input to parser
    topics = [ "ppz/devices/+/up" ]
    data_format = "json_v2"
    [[inputs.mqtt_consumer.json_v2]]

    [[inputs.mqtt_consumer.topic_parsing]]
      topic = "+/+/+/+"
      tags = "_/_/sensor_id/_"

      # Node fw version
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "fw_version"
        type = "string"
        optional = true

      # Board counter
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "counter"
        type = "int"
        optional = true

      # Board voltages
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "board_3_5V"
        type = "float"
        optional = true
      # Board voltages 5V
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "board_5V"
        type = "float"
        optional = true
      # Board voltages batt
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "board_batt"
        type = "float"
        optional = true

      # Temperature
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "bme280_t"
        type = "float"
        optional = true
      # Pressure
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "bme280_p"
        type = "int"
        optional = true
      # Humidity
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "bme280_h"
        type = "float"
        optional = true

      # Particles SPS30
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "sps30_fw_ver"
        type = "string"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "sps30_ser_num"
        type = "string"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "sps30_prod_name"
        type = "string"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "sps30_PM1"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "sps30_PM2"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "sps30_PM4"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "sps30_PM10"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "sps30_NumPM0"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "sps30_NumPM1"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "sps30_NumPM2"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "sps30_NumPM4"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "sps30_NumPM10"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "sps30_PartSize"
        type = "float"
        optional = true


      # Particles OPC-N3
      # Fw, serial num
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_fw_ver"
        type = "string"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_ser_num"
        type = "string"
        optional = true
      # Pm 
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_PM1"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_PM2_5"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_PM10"
        type = "float"
        optional = true
      # Histogram bins
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin0"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin1"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin2"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin3"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin4"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin5"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin6"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin7"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin8"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin9"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin10"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin11"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin12"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin13"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin14"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin15"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin16"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin17"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin18"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin19"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin20"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin21"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin22"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin23"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin1_MToF"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin3_MToF"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin5_MToF"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_bin7_MToF"
        type = "int"
        optional = true
      # Sampling metadata
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_sampling_p"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_flow_rate"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_t"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_h"
        type = "int"
        optional = true
      # Debug
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_RC_glitch"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_RC_long"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_RC_ratio"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_RC_out_of_range"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_fan_rev"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_laser_stat"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "opcn3_reset_event"
        type = "int"
        optional = true

      # AD sockets
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "AD_socket_1_1"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "AD_socket_1_2"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "AD_socket_2_1"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "AD_socket_2_2"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "AD_socket_3_1"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "AD_socket_3_2"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "AD_socket_4_1"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "AD_socket_4_2"
        type = "float"
        optional = true

      # To be added later:

      # Network stats

      # GPS

      # SGP41

      # SHT40

      # SCD40

######################
#    TTN broker      #
######################
[[inputs.mqtt_consumer]]
    servers = ["$MQQT_2_SERVER"]
    qos = 0
    connection_timeout = "30s"
    client_id = "$MQQT_2_CLIENT_ID"
    username = "$MQQT_2_USERNAME"
    password = "$MQQT_2_PASSWORD"
    topics = [ "v3/first-run-city-node-1@ttn/devices/+/up" ]
    data_format = "json_v2"
    [[inputs.mqtt_consumer.json_v2]]

      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.counter"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.batt"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.no2_1"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.no2_2"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.ox_1"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.ox_2"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.pm1"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.pm10"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.pm25"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.hum"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.pres"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.temp"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.socket1_1"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.socket1_2"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.socket2_1"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.socket2_2"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.board_counter"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.board_solar_voltage"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.board_batt_voltage"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.board_rail_voltage"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.bme280_temp"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.bme280_pres"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.bme280_hum"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.opcn3_PM1"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.opcn3_PM25"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.opcn3_PM10"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.AD_socket_1_1"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.AD_socket_1_2"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.AD_socket_2_1"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.AD_socket_2_2"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.metan"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.metan_temp"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.sps30_pm1"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.sps30_pm2"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.sps30_pm4"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.decoded_payload.sps30_pm10"
        type = "float"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.rx_metadata.0.gateway_ids.gateway_id"
        type = "string"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.rx_metadata.0.rssi"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.rx_metadata.0.snr"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.f_port"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.f_cnt"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "end_device_ids.dev_eui"
        type = "string"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.settings.data_rate.lora.bandwidth"
        type = "int"
        optional = true
      [[inputs.mqtt_consumer.json_v2.field]]
        path = "uplink_message.settings.data_rate.lora.spreading_factor"
        type = "int"
        optional = true

    [[inputs.mqtt_consumer.topic_parsing]]
      topic = "+/+/+/+/+"
      tags = "_/_/_/sensor_id/_"


# Read metrics about cpu usage
[[inputs.cpu]]
  ## Whether to report per-cpu stats or not
  percpu = true
  ## Whether to report total system cpu stats or not
  totalcpu = true
  ## If true, collect raw CPU time metrics.
  collect_cpu_time = false

# Read metrics about disk usage by mount point
[[inputs.disk]]
  ## Ignore some mountpoints by filesystem type. For example (dev)tmpfs (usually
  ## present on /run, /var/run, /dev/shm or /dev).
  ignore_fs = ["tmpfs", "devtmpfs"]

# Read metrics about disk IO by device
[[inputs.diskio]]
  ## Setting devices will restrict the stats to the specified devices.
  # devices = ["sda", "sdb"]

# Get kernel statistics from /proc/stat
[[inputs.kernel]]
  # no configuration

# Read metrics about memory usage
[[inputs.mem]]
  # no configuration

# Get the number of processes and group them by status
[[inputs.processes]]
  # no configuration

# Read metrics about swap memory usage
[[inputs.swap]]
  # no configuration

# Read metrics about system load & uptime
[[inputs.system]]
  # no configuration

# # Read metrics about docker containers
#[[inputs.docker]]
#  endpoint = "unix:///var/run/docker.sock"
#  timeout = "5s"

# # Read metrics about network interface usage
[[inputs.net]]
  interfaces = ["eth*"]
